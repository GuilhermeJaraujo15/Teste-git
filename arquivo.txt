Exercícios Práticos de Git e GitHub

1. **Criar um Repositório Local e Remoto**
    - **Descrição**: Crie um novo repositório local no seu computador e, em seguida, crie um repositório remoto no GitHub. Vincule o repositório local ao remoto e faça o primeiro commit.
    - **Comandos**: `git init`, `git add .`, `git commit -m "Initial commit"`, `git remote add origin <URL-do-repositório>`, `git push -u origin main`
2. **Clonar um Repositório Existente**
    - **Descrição**: Clone um repositório existente do GitHub para o seu computador. Explore os arquivos e o histórico de commits.
    - **Comando**: `git clone <URL-do-repositório>`
3. **Criar e Mudar de Branch**
    - **Descrição**: Crie uma nova branch para trabalhar em uma funcionalidade diferente e depois mude para essa branch.
    - **Comandos**: `git checkout -b nome-da-branch`, `git checkout nome-da-branch`
4. **Realizar um Merge**
    - **Descrição**: Faça alterações em uma branch e depois realize um merge dessas alterações na branch principal (main).
    - **Comandos**: `git checkout main`, `git merge nome-da-branch`
5. **Resolver um Conflito de Merge**
    - **Descrição**: Crie um conflito de merge intencionalmente e, em seguida, resolva-o. Documente o processo e as alterações feitas.
    - **Comandos**: Modifique arquivos em duas branches diferentes e tente mesclar.
6. **Utilizar Git Status e Git Diff**
    - **Descrição**: Faça alterações em um arquivo, use `git status` para verificar o estado dos arquivos e `git diff` para ver as diferenças antes de fazer um commit.
    - **Comandos**: `git status`, `git diff`
7. **Adicionar e Configurar um Arquivo .gitignore**
    - **Descrição**: Crie um arquivo `.gitignore` e adicione regras para ignorar arquivos específicos, como arquivos temporários ou de configuração.
    - **Arquivo**: `.gitignore`
8. **Reverter um Commit**
    - **Descrição**: Faça um commit que você deseja reverter. Use o comando apropriado para desfazer ou reverter esse commit.
    - **Comandos**: `git revert <ID-do-commit>`, `git reset --hard <ID-do-commit>`
9. **Adicionar um Arquivo de Documentação (README.md)**
    - **Descrição**: Crie um arquivo `README.md` no seu repositório e adicione informações básicas sobre o projeto, como descrição, instalação e uso.
    - **Arquivo**: `README.md`
10. **Criar um Pull Request**
    - **Descrição**: Faça alterações em uma branch separada e crie um pull request no GitHub para mesclar essas alterações na branch principal. Adicione um título e uma descrição para o pull request.
    - **Passos**: Crie uma branch, faça alterações e commit, empurre a branch para o GitHub, e então crie um pull request no GitHub.


